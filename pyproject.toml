[tool.black] 
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 100
target-version = ["py310"]
[tool.pytest.ini_options]

pythonpath = "src"
addopts = [
    "--import-mode=prepend",
]
env = [
    ### By default, use the local config file for unit-tests.
    ### Other config files can be used using the make commands (see makefile)
    "CONFIG_FILE=config.local.yml",
]

[tool.isort]

# Number of blank lines after the imports:
lines_after_imports = 2

[tool.ruff]

# Enable the following rules:
select = [
    # https://beta.ruff.rs/docs/rules/
    "A",    # Enable 'Flake8-builtins' codes
    "ANN",  # Enable 'Flake8-annotations' codes
    "ARG",  # Enable 'Flake8-unused-arguments' codes
    "B",    # Enable 'Flake8-bugbear' codes
    "BLE",  # Enable 'Flake8-blind-except' codes
    "C4",   # Enable 'Flake8-comprehensions' codes
    "C90",  # Enable 'Mccabe' codes
    "COM",  # Enable 'Flake8-commas' codes
    "D",    # Enable 'Pydocstyle' codes
    "DTZ",  # Enable 'Flake8-datetimez' codes
    "E",    # Enable 'Pycodestyle' error codes
    "EM",   # Enable 'Flake8-errmsg' codes
    "F",    # Enable 'Pyflakes' codes
    "FBT",  # Enable 'Flake8-boolean-trap' codes
    "G",    # Enable 'Flake8-logging-format' codes
    "I",    # Enable 'isort' codes
    "ICN",  # Enable 'Flake8-import-conventions' codes
    "INP",  # Enable 'Flake8-no-pep420' codes
    "ISC",  # Enable 'Flake8-implicit-str-concat' codes
    "N",    # Enable 'Pep-8 naming' codes
    "PD",   # Enable 'Pandas-vet' codes
    "PGH",  # Enable 'Pygrep-hooks' codes
    "PIE",  # Enable 'Flake8-pie' codes
    "PL",   # Enable 'Pylint' codes
    "PTH",  # Enable 'Flake8-use-pathlib' codes
    "Q",    # Enable 'Flake8-quotes' codes
    "RET",  # Enable 'Flake8-return' codes
    "RSE",  # Enable 'Flake8-raise' codes
    "S",    # Enable 'Flake8-bandit' codes
    "SLF",  # Enable 'Flake8-self' codes
    "TID",  # Enable 'Flake8-tidy-imports' codes
    "UP",   # Enable 'Pyupgrade' codes
    "W",    # Enable 'Pycodestyle' warning codes
]

# Ignore the following codes:
ignore = [
    "ANN101",   # Missing type annotation for `self` in method
    "D203",     # 1 blank line required before class docstring
    "D212",     # Multi-line docstring summary should start at the first line
    "E712",     # Comparison to True should be cond is True or if cond:
    "FBT001",   # Boolean positional arg in function definition
    "FBT002",   # Boolean default value in function definition
    "G004",     # Logging statement uses f-string
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    "RET504",   # Unnecessary assignment to {name} before return statement
    "S101",     # Use of assert detected
    "PTH118",
    "PTH103",
    "PTH120",
    "SLF001"
]

# Do not autofix the following codes:
unfixable = [
    "F401",
    "F841",
    "PIE794",
    "TID252"
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Maximum line length (same as Black).
line-length = 100

# # Allow unused variables when underscore-prefixed.
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Specify the Python version
target-version = "py310"

# Allow imports relative to the "src" and "test" directories.
src = ["src", "tests"]

[tool.ruff.flake8-quotes]

docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.isort]

# Number of blank lines after the imports (same as isort).
lines-after-imports = 2

[tool.ruff.mccabe]

# The maximum McCabe complexity to allow before triggering C901 errors
max-complexity = 10

[tool.ruff.pycodestyle]

# Allow lines starting by "TODO", "FIXME" or "XXX" to violate the line-length limit.
ignore-overlong-task-comments = true

[tool.ruff.pydocstyle]

# Use Google-style docstrings.
convention = "google"

[tool.ruff.pylint]

# Maximum number of arguments allowed for a function or method definition.
max-args = 10

# Maximum number of branches allowed for a function or method body
max-branches = 12

# Maximum number of return statements allowed for a function or method body
max-returns = 6

# Maximum number of statements allowed for a function or method body
max-statements = 50

[tool.mypy]

mypy_path = "src"
ignore_missing_imports = true

[tool.coverage.report]

exclude_lines = [
    'if __name__ == "__main__":'
]

[tool.cruft]

skip = [
    ".git"
]
